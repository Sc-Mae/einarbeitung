# English translations for xmlschema package.
# Copyright (C) 2022 , 2016, SISSA (International School for Advanced Studies).
# This file is distributed under the same license as the xmlschema package.
# Davide Brunato <brunato@sissa.it>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: xmlschema\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-20 06:55+0100\n"
"PO-Revision-Date: 2022-05-12 17:30+0200\n"
"Last-Translator: Davide Brunato <brunato@sissa.it>\n"
"Language-Team: English\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: xmlschema/documents.py:51
#, fuzzy
msgid "invalid schema class {!r}"
msgstr "invalid value {!r}"

#: xmlschema/documents.py:89
#, fuzzy
msgid "cannot get a schema for XML data, provide a schema argument"
msgstr ""
"unable to select an element for decoding data, provide a valid 'path' "
"argument."

#: xmlschema/exports.py:148
msgid "target directory {} is not empty"
msgstr "target directory {} is not empty"

#: xmlschema/exports.py:151
msgid "target {} is not a directory"
msgstr "target {} is not a directory"

#: xmlschema/exports.py:154
msgid "target parent directory {} does not exist"
msgstr "target parent directory {} does not exist"

#: xmlschema/exports.py:157
msgid "target parent {} is not a directory"
msgstr "target parent {} is not a directory"

#: xmlschema/exports.py:171
msgid "target directory {} violation for exported path {}, {}"
msgstr "target directory {} violation for exported path {}, {}"

#: xmlschema/loaders.py:117
msgid ""
"if the 'namespace' attribute is not present on the import statement then the "
"imported schema must have a 'targetNamespace'"
msgstr ""
"if the 'namespace' attribute is not present on the import statement then the "
"imported schema must have a 'targetNamespace'"

#: xmlschema/loaders.py:121
msgid ""
"the attribute 'namespace' must be different from schema's 'targetNamespace'"
msgstr ""
"the attribute 'namespace' must be different from schema's 'targetNamespace'"

#: xmlschema/loaders.py:155
msgid "Include schema failed: {}"
msgstr "Include schema failed: {}"

#: xmlschema/loaders.py:164
msgid "Redefine schema failed: {}"
msgstr "Redefine schema failed: {}"

#: xmlschema/loaders.py:166
msgid "Override schema failed: {}"
msgstr "Override schema failed: {}"

#: xmlschema/loaders.py:173
msgid "can't include schema {!r}: {}"
msgstr "can't include schema {!r}: {}"

#: xmlschema/loaders.py:175
msgid "can't redefine schema {!r}: {}"
msgstr "can't redefine schema {!r}: {}"

#: xmlschema/loaders.py:177
msgid "can't override schema {!r}: {}"
msgstr "can't override schema {!r}: {}"

#: xmlschema/loaders.py:185
msgid "can't {} the same schema {!r}"
msgstr "can't {} the same schema {!r}"

#: xmlschema/loaders.py:214
msgid "import of namespace {!r} failed: {}"
msgstr "import of namespace {!r} failed: {}"

#: xmlschema/loaders.py:216
msgid "import of chameleon schema failed: {}"
msgstr "import of chameleon schema failed: {}"

#: xmlschema/loaders.py:230
msgid "Import of namespace {!r} from {!r} failed: {}."
msgstr "Import of namespace {!r} from {!r} failed: {}."

#: xmlschema/loaders.py:253
msgid "imported schema {!r} has an unmatched namespace {!r}"
msgstr "imported schema {!r} has an unmatched namespace {!r}"

#: xmlschema/locations.py:34
msgid "wrong type {!r} for locations argument"
msgstr "wrong type {!r} for locations argument"

#: xmlschema/resources/arguments.py:46
msgid "source XML document is empty"
msgstr "source XML document is empty"

#: xmlschema/resources/arguments.py:78
msgid "invalid value {!r} for argument {!r}"
msgstr "invalid value {!r} for argument {!r}"

#: xmlschema/utils/descriptors.py:112 xmlschema/validators/builders.py:187
msgid "Can't set attribute {}"
msgstr "Can't set attribute {}"

#: xmlschema/utils/descriptors.py:116 xmlschema/validators/builders.py:190
msgid "Can't delete attribute {}"
msgstr "Can't delete attribute {}"

#: xmlschema/utils/descriptors.py:124
msgid "invalid type {!r} for argument {!r}"
msgstr "invalid type {!r} for argument {!r}"

#: xmlschema/utils/descriptors.py:138
msgid "invalid value {!r} for argument {!r}: must be one of {}"
msgstr "invalid value {!r} for argument {!r}: must be one of {}"

#: xmlschema/utils/descriptors.py:156
msgid "the argument {!r} must be greater or equal than {}"
msgstr "the argument {!r} must be greater or equal than {}"

#: xmlschema/utils/descriptors.py:159
msgid "the argument {!r} must be lesser or equal than {}"
msgstr "the argument {!r} must be lesser or equal than {}"

#: xmlschema/utils/logger.py:30
msgid "{!r} is not a valid loglevel"
msgstr "{!r} is not a valid loglevel"

#: xmlschema/validators/assertions.py:76
msgid "base_type={!r} is not a complexType definition"
msgstr "base_type={!r} is not a complexType definition"

#: xmlschema/validators/attributes.py:89
msgid "unknown attribute {!r}"
msgstr "unknown attribute {!r}"

#: xmlschema/validators/attributes.py:105
msgid "referenced attribute has a different fixed value {!r}"
msgstr "referenced attribute has a different fixed value {!r}"

#: xmlschema/validators/attributes.py:110
msgid "attribute {!r} is not allowed when attribute reference is used"
msgstr "attribute {!r} is not allowed when attribute reference is used"

#: xmlschema/validators/attributes.py:126
msgid "an attribute name must be different from 'xmlns'"
msgstr "an attribute name must be different from 'xmlns'"

#: xmlschema/validators/attributes.py:133
#, python-format
msgid "cannot add attributes in %r namespace"
msgstr "cannot add attributes in %r namespace"

#: xmlschema/validators/attributes.py:154
msgid "ambiguous type definition for XSD attribute"
msgstr "ambiguous type definition for XSD attribute"

#: xmlschema/validators/attributes.py:166
msgid "XSD attribute's type must be a simpleType"
msgstr "XSD attribute's type must be a simpleType"

#: xmlschema/validators/attributes.py:173 xmlschema/validators/elements.py:291
msgid "'default' and 'fixed' attributes are mutually exclusive"
msgstr "'default' and 'fixed' attributes are mutually exclusive"

#: xmlschema/validators/attributes.py:177
msgid ""
"the attribute 'use' must be 'optional' if the attribute 'default' is present"
msgstr ""
"the attribute 'use' must be 'optional' if the attribute 'default' is present"

#: xmlschema/validators/attributes.py:182
msgid "default value {!r} is not compatible with attribute's type"
msgstr "default value {!r} is not compatible with attribute's type"

#: xmlschema/validators/attributes.py:185
msgid "xs:ID key attributes cannot have a default value"
msgstr "xs:ID key attributes cannot have a default value"

#: xmlschema/validators/attributes.py:191
msgid "fixed value {!r} is not compatible with attribute's type"
msgstr "fixed value {!r} is not compatible with attribute's type"

#: xmlschema/validators/attributes.py:194
msgid "xs:ID key attributes cannot have a fixed value"
msgstr "xs:ID key attributes cannot have a fixed value"

#: xmlschema/validators/attributes.py:238 xmlschema/validators/elements.py:766
msgid ""
"cannot validate against xs:NOTATION directly, only against a subtype with an "
"enumeration facet"
msgstr ""
"cannot validate against xs:NOTATION directly, only against a subtype with an "
"enumeration facet"

#: xmlschema/validators/attributes.py:242 xmlschema/validators/elements.py:770
msgid "missing enumeration facet in xs:NOTATION subtype"
msgstr "missing enumeration facet in xs:NOTATION subtype"

#: xmlschema/validators/attributes.py:251
msgid "attribute {0!r} has a fixed value {1!r}"
msgstr "attribute {0!r} has a fixed value {1!r}"

#: xmlschema/validators/attributes.py:305
msgid "attribute 'fixed' with use=prohibited is not allowed in XSD 1.1"
msgstr "attribute 'fixed' with use=prohibited is not allowed in XSD 1.1"

#: xmlschema/validators/attributes.py:397
msgid "more anyAttribute declarations in the same attribute group"
msgstr "more anyAttribute declarations in the same attribute group"

#: xmlschema/validators/attributes.py:400
msgid "another declaration after anyAttribute"
msgstr "another declaration after anyAttribute"

#: xmlschema/validators/attributes.py:416
msgid "multiple declaration for attribute {!r}"
msgstr "multiple declaration for attribute {!r}"

#: xmlschema/validators/attributes.py:425
msgid "the attribute 'ref' is required in a local attributeGroup"
msgstr "the attribute 'ref' is required in a local attributeGroup"

#: xmlschema/validators/attributes.py:435
msgid "duplicated attributeGroup {!r}"
msgstr "duplicated attributeGroup {!r}"

#: xmlschema/validators/attributes.py:441
msgid "in a redefinition the reference to itself must be the first"
msgstr "in a redefinition the reference to itself must be the first"

#: xmlschema/validators/attributes.py:452
msgid "attributeGroup ref={!r} is not in the redefined group"
msgstr "attributeGroup ref={!r} is not in the redefined group"

#: xmlschema/validators/attributes.py:456
msgid "Circular attribute groups not allowed in XSD 1.0"
msgstr "Circular attribute groups not allowed in XSD 1.0"

#: xmlschema/validators/attributes.py:464
msgid "unknown attribute group {!r}"
msgstr "unknown attribute group {!r}"

#: xmlschema/validators/attributes.py:475
msgid "multiple declaration of attribute {!r}"
msgstr "multiple declaration of attribute {!r}"

#: xmlschema/validators/attributes.py:485
msgid "(attribute | attributeGroup) expected, found {!r}."
msgstr "(attribute | attributeGroup) expected, found {!r}."

#: xmlschema/validators/attributes.py:496
msgid "Unexpected attribute {!r} in restriction"
msgstr "Unexpected attribute {!r} in restriction"

#: xmlschema/validators/attributes.py:512
msgid "Attribute wildcard is not a restriction of the base wildcard"
msgstr "Attribute wildcard is not a restriction of the base wildcard"

#: xmlschema/validators/attributes.py:522
msgid "Attribute type is not a restriction of the base attribute type"
msgstr "Attribute type is not a restriction of the base attribute type"

#: xmlschema/validators/attributes.py:527
msgid "Attribute {!r}: unmatched attribute use in restriction"
msgstr "Attribute {!r}: unmatched attribute use in restriction"

#: xmlschema/validators/attributes.py:533
msgid "Attribute {!r}: derived attribute has a different fixed value"
msgstr "Attribute {!r}: derived attribute has a different fixed value"

#: xmlschema/validators/attributes.py:537
msgid "Attribute {!r}: 'inheritable' property change in restriction"
msgstr "Attribute {!r}: 'inheritable' property change in restriction"

#: xmlschema/validators/attributes.py:551
msgid "Missing required attribute {!r} in redefinition restriction"
msgstr "Missing required attribute {!r} in redefinition restriction"

#: xmlschema/validators/attributes.py:556
msgid "Attribute {!r}: unmatched attribute use in redefinition"
msgstr "Attribute {!r}: unmatched attribute use in redefinition"

#: xmlschema/validators/attributes.py:559
msgid "Attribute {!r}: redefinition remove fixed constraint"
msgstr "Attribute {!r}: redefinition remove fixed constraint"

#: xmlschema/validators/attributes.py:568
msgid "Redefinition restriction contains additional attribute {!r}"
msgstr "Redefinition restriction contains additional attribute {!r}"

#: xmlschema/validators/attributes.py:572
msgid "Wrong attribute order in redefinition restriction"
msgstr "Wrong attribute order in redefinition restriction"

#: xmlschema/validators/attributes.py:591
msgid "multiple ID attributes not allowed for XSD 1.0"
msgstr "multiple ID attributes not allowed for XSD 1.0"

#: xmlschema/validators/attributes.py:646
#: xmlschema/validators/attributes.py:722
msgid "missing required attribute {!r}"
msgstr "missing required attribute {!r}"

#: xmlschema/validators/attributes.py:677
#: xmlschema/validators/attributes.py:740
#, python-format
msgid "%r is not an attribute of the XSI namespace"
msgstr "%r is not an attribute of the XSI namespace"

#: xmlschema/validators/attributes.py:685
#: xmlschema/validators/attributes.py:748
#, python-format
msgid "%r attribute not allowed for element"
msgstr "%r attribute not allowed for element"

#: xmlschema/validators/attributes.py:691
#, python-format
msgid "use of attribute %r is prohibited"
msgstr "use of attribute %r is prohibited"

#: xmlschema/validators/builders.py:232
msgid "'model' argument must be (sequence | choice | all)"
msgstr "'model' argument must be (sequence | choice | all)"

#: xmlschema/validators/builders.py:317 xmlschema/validators/builders.py:325
msgid "(restriction | list | union) expected"
msgstr "(restriction | list | union) expected"

#: xmlschema/validators/builders.py:336
msgid "missing attribute 'name' in a global simpleType"
msgstr "missing attribute 'name' in a global simpleType"

#: xmlschema/validators/builders.py:341
msgid "attribute 'name' not allowed for a local simpleType"
msgstr "attribute 'name' not allowed for a local simpleType"

#: xmlschema/validators/builders.py:463
msgid "global {} {!r} not found"
msgstr "global {} {!r} not found"

#: xmlschema/validators/builders.py:517
msgid "global xs:{} with name={!r} is already built"
msgstr "global xs:{} with name={!r} is already built"

#: xmlschema/validators/builders.py:519
msgid "global xs:{} with name={!r} is already defined"
msgstr "global xs:{} with name={!r} is already defined"

#: xmlschema/validators/builders.py:546
msgid "global xs:{} with name={!r} is already loaded"
msgstr "global xs:{} with name={!r} is already loaded"

#: xmlschema/validators/builders.py:560
msgid "not a redefinition!"
msgstr "not a redefinition!"

#: xmlschema/validators/builders.py:618
msgid "redefined schema {!r} has a different targetNamespace"
msgstr "redefined schema {!r} has a different targetNamespace"

#: xmlschema/validators/builders.py:629
msgid "unexpected instance {!r} in XSD {} global map"
msgstr "unexpected instance {!r} in XSD {} global map"

#: xmlschema/validators/complex_types.py:137
msgid "missing attribute 'name' in a global complexType"
msgstr "missing attribute 'name' in a global complexType"

#: xmlschema/validators/complex_types.py:142
msgid "attribute 'name' not allowed in a local complexType"
msgstr "attribute 'name' not allowed in a local complexType"

#: xmlschema/validators/complex_types.py:165
msgid "'mixed' attribute not allowed with simpleContent"
msgstr "'mixed' attribute not allowed with simpleContent"

#: xmlschema/validators/complex_types.py:180
#, python-format
msgid "unexpected tag %r after simpleContent declaration:"
msgstr "unexpected tag %r after simpleContent declaration:"

#: xmlschema/validators/complex_types.py:191
msgid ""
"value of 'mixed' attribute in complexType and complexContent must be the same"
msgstr ""
"value of 'mixed' attribute in complexType and complexContent must be the same"

#: xmlschema/validators/complex_types.py:211
#, python-format
msgid "unexpected tag %r after complexContent declaration"
msgstr "unexpected tag %r after complexContent declaration"

#: xmlschema/validators/complex_types.py:236
#, python-format
msgid "unexpected tag %r for complexType content"
msgstr "unexpected tag %r for complexType content"

#: xmlschema/validators/complex_types.py:244
#: xmlschema/validators/simple_types.py:1266
msgid "wrong definition with self-reference"
msgstr "wrong definition with self-reference"

#: xmlschema/validators/complex_types.py:247
#: xmlschema/validators/simple_types.py:1273
msgid "wrong redefinition without self-reference"
msgstr "wrong redefinition without self-reference"

#: xmlschema/validators/complex_types.py:258
msgid "restriction or extension tag expected"
msgstr "restriction or extension tag expected"

#: xmlschema/validators/complex_types.py:265
msgid "{!r} is expected to have a redefined/overridden component"
msgstr "{!r} is expected to have a redefined/overridden component"

#: xmlschema/validators/complex_types.py:270
msgid "{0!r} derivation not allowed for {1!r}"
msgstr "{0!r} derivation not allowed for {1!r}"

#: xmlschema/validators/complex_types.py:280
msgid "'base' attribute required"
msgstr "'base' attribute required"

#: xmlschema/validators/complex_types.py:289
#, python-format
msgid "missing base type %r"
msgstr "missing base type %r"

#: xmlschema/validators/complex_types.py:300
#: xmlschema/validators/complex_types.py:314
msgid "a complexType ancestor required: {!r}"
msgstr "a complexType ancestor required: {!r}"

#: xmlschema/validators/complex_types.py:305
#, python-format
msgid "derivation by %r blocked by attribute 'final' in base type"
msgstr "derivation by %r blocked by attribute 'final' in base type"

#: xmlschema/validators/complex_types.py:324
msgid "a not empty simpleContent cannot restrict an empty content type"
msgstr "a not empty simpleContent cannot restrict an empty content type"

#: xmlschema/validators/complex_types.py:333
msgid "content type is not a restriction of base content"
msgstr "content type is not a restriction of base content"

#: xmlschema/validators/complex_types.py:341
msgid "with simpleContent cannot restrict an element-only content type"
msgstr "with simpleContent cannot restrict an element-only content type"

#: xmlschema/validators/complex_types.py:353 xmlschema/validators/groups.py:544
#, python-format
msgid "unexpected tag %r"
msgstr "unexpected tag %r"

#: xmlschema/validators/complex_types.py:363
#, python-format
msgid "base type %r has no simple content"
msgstr "base type %r has no simple content"

#: xmlschema/validators/complex_types.py:371
msgid "the base type is not derivable by restriction"
msgstr "the base type is not derivable by restriction"

#: xmlschema/validators/complex_types.py:374
#: xmlschema/validators/complex_types.py:467
#: xmlschema/validators/complex_types.py:914
#, python-format
msgid "base %r is simple or has a simple content"
msgstr "base %r is simple or has a simple content"

#: xmlschema/validators/complex_types.py:386
#, python-brace-format
msgid ""
"restriction of an xs:{0} with more than one particle with xs:{1} is forbidden"
msgstr ""
"restriction of an xs:{0} with more than one particle with xs:{1} is forbidden"

#: xmlschema/validators/complex_types.py:398
msgid "derived a mixed content from a base type that has element-only content"
msgstr "derived a mixed content from a base type that has element-only content"

#: xmlschema/validators/complex_types.py:401
msgid "an empty content derivation from base type that has not empty content"
msgstr "an empty content derivation from base type that has not empty content"

#: xmlschema/validators/complex_types.py:412
msgid "{0!r} is not a restriction of the base type {1!r}"
msgstr "{0!r} is not a restriction of the base type {1!r}"

#: xmlschema/validators/complex_types.py:421
#: xmlschema/validators/complex_types.py:919
msgid "the base type is not derivable by extension"
msgstr "the base type is not derivable by extension"

#: xmlschema/validators/complex_types.py:454
#: xmlschema/validators/complex_types.py:964
#: xmlschema/validators/complex_types.py:1014
#, python-format
msgid ""
"base has a different content type (mixed=%r) and the extension group is not "
"empty."
msgstr ""
"base has a different content type (mixed=%r) and the extension group is not "
"empty."

#: xmlschema/validators/complex_types.py:474
msgid "cannot extend a complex content with xs:all"
msgstr "cannot extend a complex content with xs:all"

#: xmlschema/validators/complex_types.py:477
msgid "xs:sequence cannot extend xs:all"
msgstr "xs:sequence cannot extend xs:all"

#: xmlschema/validators/complex_types.py:487
msgid "XSD 1.0 does not allow extension of a not empty 'all' model group"
msgstr "XSD 1.0 does not allow extension of a not empty 'all' model group"

#: xmlschema/validators/complex_types.py:490
#, python-format
msgid ""
"base has a different content type (mixed=%r) and the extension group is not "
"empty"
msgstr ""
"base has a different content type (mixed=%r) and the extension group is not "
"empty"

#: xmlschema/validators/complex_types.py:503
#: xmlschema/validators/complex_types.py:1028
msgid "extended type has a mixed content but the base is element-only"
msgstr "extended type has a mixed content but the base is element-only"

#: xmlschema/validators/complex_types.py:670
msgid "global type {!r} is not built"
msgstr "global type {!r} is not built"

#: xmlschema/validators/complex_types.py:745
#: xmlschema/validators/complex_types.py:771
#, python-format
msgid "cannot decode %(obj)r data with %(decoder)r"
msgstr "cannot decode %(obj)r data with %(decoder)r"

#: xmlschema/validators/complex_types.py:868
msgid "the simple content of {!r} is not a valid simple type in XSD 1.1"
msgstr "the simple content of {!r} is not a valid simple type in XSD 1.1"

#: xmlschema/validators/complex_types.py:875
msgid "openContent mismatch between type and model group"
msgstr "openContent mismatch between type and model group"

#: xmlschema/validators/complex_types.py:887
#, python-format
msgid "attribute %r must be inheritable"
msgstr "attribute %r must be inheritable"

#: xmlschema/validators/complex_types.py:903
msgid "default attribute {!r} is already declared in the complex type"
msgstr "default attribute {!r} is already declared in the complex type"

#: xmlschema/validators/complex_types.py:968
msgid "cannot extend an empty mixed content with an xs:all"
msgstr "cannot extend an empty mixed content with an xs:all"

#: xmlschema/validators/complex_types.py:986
#, python-format
msgid "xs:all cannot extend a not empty xs:%s"
msgstr "xs:all cannot extend a not empty xs:%s"

#: xmlschema/validators/complex_types.py:1001
msgid "cannot extend a not empty 'all' model group with a different model"
msgstr "cannot extend a not empty 'all' model group with a different model"

#: xmlschema/validators/complex_types.py:1004
msgid "when extend an xs:all group minOccurs must be the same"
msgstr "when extend an xs:all group minOccurs must be the same"

#: xmlschema/validators/complex_types.py:1007
msgid "cannot extend an xs:all group with mixed empty content"
msgstr "cannot extend an xs:all group with mixed empty content"

#: xmlschema/validators/complex_types.py:1051
msgid "{0!r} is not an extension of the base type {1!r}"
msgstr "{0!r} is not an extension of the base type {1!r}"

#: xmlschema/validators/elements.py:178
#, python-format
msgid "unknown element %r"
msgstr "unknown element %r"

#: xmlschema/validators/elements.py:197
msgid "attribute {!r} is not allowed when element reference is used"
msgstr "attribute {!r} is not allowed when element reference is used"

#: xmlschema/validators/elements.py:218
msgid "local scope elements cannot have abstract attribute"
msgstr "local scope elements cannot have abstract attribute"

#: xmlschema/validators/elements.py:245
msgid "attribute {!r} is not allowed in a global element declaration"
msgstr "attribute {!r} is not allowed in a global element declaration"

#: xmlschema/validators/elements.py:250
msgid "attribute {!r} not allowed in a local element declaration"
msgstr "attribute {!r} not allowed in a local element declaration"

#: xmlschema/validators/elements.py:268 xmlschema/validators/elements.py:1529
#: xmlschema/validators/simple_types.py:908
#: xmlschema/validators/simple_types.py:1070
#: xmlschema/validators/simple_types.py:1279
msgid "unknown type {!r}"
msgstr "unknown type {!r}"

#: xmlschema/validators/elements.py:273
msgid ""
"the attribute 'type' and a xs:{} local declaration are mutually exclusive"
msgstr ""
"the attribute 'type' and a xs:{} local declaration are mutually exclusive"

#: xmlschema/validators/elements.py:295
msgid "'default' value {!r} is not compatible with element's type"
msgstr "'default' value {!r} is not compatible with element's type"

#: xmlschema/validators/elements.py:299
msgid "xs:ID or a type derived from xs:ID cannot have a default value"
msgstr "xs:ID or a type derived from xs:ID cannot have a default value"

#: xmlschema/validators/elements.py:305
msgid "'fixed' value {!r} is not compatible with element's type"
msgstr "'fixed' value {!r} is not compatible with element's type"

#: xmlschema/validators/elements.py:309
msgid "xs:ID or a type derived from xs:ID cannot have a fixed value"
msgstr "xs:ID or a type derived from xs:ID cannot have a fixed value"

#: xmlschema/validators/elements.py:326 xmlschema/validators/elements.py:334
#, python-format
msgid "duplicated identity constraint %r:"
msgstr "duplicated identity constraint %r:"

#: xmlschema/validators/elements.py:356
#, python-format
msgid "unknown substitutionGroup %r"
msgstr "unknown substitutionGroup %r"

#: xmlschema/validators/elements.py:361
#, python-format
msgid "circularity found for substitutionGroup %r"
msgstr "circularity found for substitutionGroup %r"

#: xmlschema/validators/elements.py:376
msgid ""
"{0!r} type is not of the same or a derivation of the head element {1!r} type"
msgstr ""
"{0!r} type is not of the same or a derivation of the head element {1!r} type"

#: xmlschema/validators/elements.py:380
#, python-format
msgid ""
"head element %r can't be substituted by an element that has a derivation of "
"its type"
msgstr ""
"head element %r can't be substituted by an element that has a derivation of "
"its type"

#: xmlschema/validators/elements.py:384
#, python-format
msgid ""
"head element %r can't be substituted by an element that has an extension of "
"its type"
msgstr ""
"head element %r can't be substituted by an element that has an extension of "
"its type"

#: xmlschema/validators/elements.py:388
#, python-format
msgid ""
"head element %r can't be substituted by an element that has a restriction of "
"its type"
msgstr ""
"head element %r can't be substituted by an element that has a restriction of "
"its type"

#: xmlschema/validators/elements.py:566
msgid "schemaLocation declaration after namespace start"
msgstr "schemaLocation declaration after namespace start"

#: xmlschema/validators/elements.py:599 xmlschema/validators/elements.py:935
msgid "can't use an abstract element in an instance"
msgstr "can't use an abstract element for validation"

#: xmlschema/validators/elements.py:602 xmlschema/validators/elements.py:938
msgid ""
"can't use an abstract XSD element for validation unless it's the head of a "
"substitution group"
msgstr ""
"can't use an abstract XSD element for validation unless it's the head of a "
"substitution group"

#: xmlschema/validators/elements.py:610 xmlschema/validators/elements.py:951
msgid "can't use an abstract XSD element for validation"
msgstr "can't use an abstract XSD element for validation"

#: xmlschema/validators/elements.py:664
#, python-format
msgid "usage of %r is blocked"
msgstr "usage of %r is blocked"

#: xmlschema/validators/elements.py:668
#, python-format
msgid "%r is abstract"
msgstr "%r is abstract"

#: xmlschema/validators/elements.py:697
msgid "element is not nillable"
msgstr "element is not nillable"

#: xmlschema/validators/elements.py:700
msgid "xsi:nil attribute must have a boolean value"
msgstr "xsi:nil attribute must have a boolean value"

#: xmlschema/validators/elements.py:705
msgid "xsi:nil='true' but the element has a fixed value"
msgstr "xsi:nil='true' but the element has a fixed value"

#: xmlschema/validators/elements.py:708
msgid "xsi:nil='true' but the element is not empty"
msgstr "xsi:nil='true' but the element is not empty"

#: xmlschema/validators/elements.py:714
msgid "character data is not allowed because content is empty"
msgstr "character data is not allowed because content is empty"

#: xmlschema/validators/elements.py:733 xmlschema/validators/elements.py:749
#, python-format
msgid "must have the fixed value %r"
msgstr "must have the fixed value %r"

#: xmlschema/validators/elements.py:738
msgid "a simple content element can't have child elements"
msgstr "a simple content element can't have child elements"

#: xmlschema/validators/elements.py:1284
msgid "test attribute missing in non-final alternative"
msgstr "test attribute missing in non-final alternative"

#: xmlschema/validators/elements.py:1396
msgid "Maybe a not equivalent type table between elements {0!r} and {1!r}"
msgstr "Maybe a not equivalent type table between elements {0!r} and {1!r}"

#: xmlschema/validators/elements.py:1429
#, python-brace-format
msgid "adding schema at {url} change the "
msgstr ""

#: xmlschema/validators/elements.py:1511 xmlschema/validators/elements.py:1519
msgid "missing 'type' attribute"
msgstr "missing 'type' attribute"

#: xmlschema/validators/elements.py:1523
msgid "declared type is not derived from {!r}"
msgstr "declared type is not derived from {!r}"

#: xmlschema/validators/elements.py:1533
msgid "type {0!r} is not derived from {1!r}"
msgstr "type {0!r} is not derived from {1!r}"

#: xmlschema/validators/elements.py:1538
#, python-format
msgid ""
"the attribute 'type' and the xs:%s local declaration are mutually exclusive"
msgstr ""
"the attribute 'type' and the xs:%s local declaration are mutually exclusive"

#: xmlschema/validators/exceptions.py:177
#, fuzzy
msgid "Circular definition detected for xs:{} {!r}."
msgstr "Circular definition detected for xs:{} {!r}."

#: xmlschema/validators/exceptions.py:439
#, python-format
msgid "The content of element %r is not complete."
msgstr "The content of element %r is not complete."

#: xmlschema/validators/exceptions.py:443
#, python-format
msgid "Unexpected child with tag %r at position %d."
msgstr "Unexpected child with tag %r at position %d."

#: xmlschema/validators/exceptions.py:459
#, python-format
msgid " Tag (%s) expected."
msgstr " Tag (%s) expected."

#: xmlschema/validators/exceptions.py:461
#, python-format
msgid " Tag %s expected."
msgstr " Tag %s expected."

#: xmlschema/validators/exceptions.py:463
#, python-format
msgid " Tag %r expected."
msgstr " Tag %r expected."

#: xmlschema/validators/facets.py:87
msgid "{0!r} facet value is fixed to {1!r}"
msgstr "{0!r} facet value is fixed to {1!r}"

#: xmlschema/validators/facets.py:95
msgid "invalid type {!r} provided: {}"
msgstr "invalid type {!r} provided: {}"

#: xmlschema/validators/facets.py:138 xmlschema/validators/facets.py:141
msgid "facet value can be only 'collapse'"
msgstr "facet value can be only 'collapse'"

#: xmlschema/validators/facets.py:143
msgid "facet value can be only 'replace' or 'collapse'"
msgstr "facet value can be only 'replace' or 'collapse'"

#: xmlschema/validators/facets.py:149
msgid "value contains tabs or newlines"
msgstr "value contains tabs or newlines"

#: xmlschema/validators/facets.py:158
msgid "value contains non collapsed white spaces"
msgstr "value contains non collapsed white spaces"

#: xmlschema/validators/facets.py:184
msgid "base facet has a different length ({})"
msgstr "base facet has a different length ({})"

#: xmlschema/validators/facets.py:195
msgid "length has to be {!r}"
msgstr "length has to be {!r}"

#: xmlschema/validators/facets.py:222
msgid "base facet has a greater min length ({})"
msgstr "base facet has a greater min length ({})"

#: xmlschema/validators/facets.py:233
msgid "value length cannot be lesser than {!r}"
msgstr "value length cannot be lesser than {!r}"

#: xmlschema/validators/facets.py:260
msgid "base type has a lesser max length ({})"
msgstr "base type has a lesser max length ({})"

#: xmlschema/validators/facets.py:271
msgid "value length cannot be greater than {!r}"
msgstr "value length cannot be greater than {!r}"

#: xmlschema/validators/facets.py:305 xmlschema/validators/facets.py:346
#: xmlschema/validators/facets.py:389 xmlschema/validators/facets.py:428
msgid "invalid restriction: {}"
msgstr "invalid restriction: {}"

#: xmlschema/validators/facets.py:312
msgid "value has to be greater or equal than {!r}"
msgstr "value has to be greater or equal than {!r}"

#: xmlschema/validators/facets.py:350
msgid "invalid restriction: {} is also the maximum"
msgstr "invalid restriction: {} is also the maximum"

#: xmlschema/validators/facets.py:356
msgid "value has to be greater than {!r}"
msgstr "value has to be greater than {!r}"

#: xmlschema/validators/facets.py:394
msgid "value has to be less than or equal than {!r}"
msgstr "value has to be less than or equal than {!r}"

#: xmlschema/validators/facets.py:432
msgid "invalid restriction: {} is also the minimum"
msgstr "invalid restriction: {} is also the minimum"

#: xmlschema/validators/facets.py:438
msgid "value has to be lesser than {!r}"
msgstr "value has to be lesser than {!r}"

#: xmlschema/validators/facets.py:475 xmlschema/validators/facets.py:537
msgid "invalid restriction: base value is lower ({})"
msgstr "invalid restriction: base value is lower ({})"

#: xmlschema/validators/facets.py:488
msgid "the number of digits has to be lesser or equal than {!r}"
msgstr "the number of digits has to be lesser or equal than {!r}"

#: xmlschema/validators/facets.py:516
msgid ""
"fractionDigits facet can be applied only to types derived from xs:decimal"
msgstr ""
"fractionDigits facet can be applied only to types derived from xs:decimal"

#: xmlschema/validators/facets.py:532
msgid "fractionDigits facet value must be 0 for types derived from xs:integer"
msgstr "fractionDigits facet value must be 0 for types derived from xs:integer"

#: xmlschema/validators/facets.py:549
msgid "the number of fraction digits has to be lesser or equal than {!r}"
msgstr "the number of fraction digits has to be lesser or equal than {!r}"

#: xmlschema/validators/facets.py:579
msgid "invalid restriction from {!r}"
msgstr "invalid restriction from {!r}"

#: xmlschema/validators/facets.py:585
msgid "time zone required for value {!r}"
msgstr "time zone required for value {!r}"

#: xmlschema/validators/facets.py:593
msgid "time zone prohibited for value {!r}"
msgstr "time zone prohibited for value {!r}"

#: xmlschema/validators/facets.py:643
msgid "value {!r} must match a notation declaration"
msgstr "value {!r} must match a notation declaration"

#: xmlschema/validators/facets.py:701
msgid "value must be one of {!r}"
msgstr "value must be one of {!r}"

#: xmlschema/validators/facets.py:798
msgid "value doesn't match any pattern of {!r}"
msgstr "value doesn't match any pattern of {!r}"

#: xmlschema/validators/facets.py:849
msgid "missing attribute 'test'"
msgstr "missing attribute 'test'"

#: xmlschema/validators/facets.py:879
msgid "value is not true with test path {!r}"
msgstr "value is not true with test path {!r}"

#: xmlschema/validators/global_maps.py:142
msgid "multiple redefinition for {} {!r}"
msgstr "multiple redefinition for {} {!r}"

#: xmlschema/validators/global_maps.py:157
msgid "circular redefinition for {} {!r}"
msgstr "circular redefinition for {} {!r}"

#: xmlschema/validators/global_maps.py:262
msgid "can't change attribute {!r} of a global maps instance"
msgstr "can't change attribute {!r} of a global maps instance"

#: xmlschema/validators/global_maps.py:324
msgid "wrong tag {!r} for an XSD global definition/declaration"
msgstr "wrong tag {!r} for an XSD global definition/declaration"

#: xmlschema/validators/global_maps.py:382
msgid "{0!r} cannot substitute {1!r}"
msgstr "{0!r} cannot substitute {1!r}"

#: xmlschema/validators/global_maps.py:684
msgid "defaultAttributes={0!r} doesn't match any attribute group of {1!r}"
msgstr "defaultAttributes={0!r} doesn't match any attribute group of {1!r}"

#: xmlschema/validators/global_maps.py:731
msgid "global maps main validator is not registered"
msgstr ""

#: xmlschema/validators/global_maps.py:744
msgid "schema {} does not belong to namespace {!r}"
msgstr "schema {} does not belong to namespace {!r}"

#: xmlschema/validators/global_maps.py:748
msgid "duplicate of schema {} found in namespace {!r}"
msgstr "duplicate of schema {} found in namespace {!r}"

#: xmlschema/validators/global_maps.py:753
msgid "registered schemas do not match namespace mapped schemas"
msgstr "registered schemas do not match namespace mapped schemas"

#: xmlschema/validators/global_maps.py:773
msgid "circularity found for substitution group with head element {}"
msgstr "circularity found for substitution group with head element {}"

#: xmlschema/validators/global_maps.py:778
msgid "global group not built!"
msgstr "global group not built!"

#: xmlschema/validators/global_maps.py:785
msgid "the redefined group is an illegal restriction"
msgstr "the redefined group is an illegal restriction"

#: xmlschema/validators/global_maps.py:801
msgid "the derived group is an illegal restriction"
msgstr "the derived group is an illegal restriction"

#: xmlschema/validators/global_maps.py:811
msgid "restriction has an open content but base type has not"
msgstr "restriction has an open content but base type has not"

#: xmlschema/validators/global_maps.py:817
msgid ""
"can't verify the content model of {!r} due to exceeding of maximum recursion "
"depth"
msgstr ""
"can't verify the content model of {!r} due to exceeding of maximum recursion "
"depth"

#: xmlschema/validators/groups.py:399
msgid "{!r} is not a particle of the model group"
msgstr "{!r} is not a particle of the model group"

#: xmlschema/validators/groups.py:481 xmlschema/validators/groups.py:521
msgid "attribute 'name' not allowed in a local group"
msgstr "attribute 'name' not allowed in a local group"

#: xmlschema/validators/groups.py:490
#, python-format
msgid "missing group %r"
msgstr "missing group %r"

#: xmlschema/validators/groups.py:500 xmlschema/validators/groups.py:552
msgid "maxOccurs must be 1 for 'all' model groups"
msgstr "maxOccurs must be 1 for 'all' model groups"

#: xmlschema/validators/groups.py:503 xmlschema/validators/groups.py:555
#: xmlschema/validators/groups.py:1243
msgid "minOccurs must be (0 | 1) for 'all' model groups"
msgstr "minOccurs must be (0 | 1) for 'all' model groups"

#: xmlschema/validators/groups.py:506
msgid "in XSD 1.0 an 'all' model group cannot be nested"
msgstr "in XSD 1.0 an 'all' model group cannot be nested"

#: xmlschema/validators/groups.py:525 xmlschema/validators/groups.py:535
msgid "attribute 'minOccurs' not allowed in a global group"
msgstr "attribute 'minOccurs' not allowed in a global group"

#: xmlschema/validators/groups.py:528 xmlschema/validators/groups.py:538
msgid "attribute 'maxOccurs' not allowed in a global group"
msgstr "attribute 'maxOccurs' not allowed in a global group"

#: xmlschema/validators/groups.py:566
msgid "'all' model can contain only elements"
msgstr "'all' model can contain only elements"

#: xmlschema/validators/groups.py:576 xmlschema/validators/groups.py:1259
msgid "missing attribute 'ref' in local group"
msgstr "missing attribute 'ref' in local group"

#: xmlschema/validators/groups.py:585
msgid "'all' model can appears only at 1st level of a model group"
msgstr "'all' model can appears only at 1st level of a model group"

#: xmlschema/validators/groups.py:593
#, fuzzy
msgid "Redefined group reference can't have minOccurs/maxOccurs other than 1"
msgstr "Redefined group reference cannot have minOccurs/maxOccurs other than 1"

#: xmlschema/validators/groups.py:597 xmlschema/validators/groups.py:1281
#, python-format
msgid "Circular definition detected for group %r"
msgstr "Circular definition detected for group %r"

#: xmlschema/validators/groups.py:853
#, python-format
msgid "substitution of %r is blocked"
msgstr "substitution of %r is blocked"

#: xmlschema/validators/groups.py:906
msgid "usage of {0!r} with type {1} is blocked by head element"
msgstr "usage of {0!r} with type {1} is blocked by head element"

#: xmlschema/validators/groups.py:931
msgid "{0!r} that matches {1!r} is not consistent with local declaration {2!r}"
msgstr ""
"{0!r} that matches {1!r} is not consistent with local declaration {2!r}"

#: xmlschema/validators/groups.py:937
msgid "Maybe a not equivalent type table between elements {0!r} and {1!r}."
msgstr "Maybe a not equivalent type table between elements {0!r} and {1!r}."

#: xmlschema/validators/groups.py:966
msgid "an empty 'choice' group with minOccurs > 0 cannot validate any content"
msgstr "an empty 'choice' group with minOccurs > 0 cannot validate any content"

#: xmlschema/validators/groups.py:977 xmlschema/validators/groups.py:1211
msgid "character data between child elements not allowed"
msgstr "character data between child elements not allowed"

#: xmlschema/validators/groups.py:990
#, python-format
msgid "XML data depth exceeded (MAX_XML_DEPTH=%r)"
msgstr "XML data depth exceeded (MAX_XML_DEPTH=%r)"

#: xmlschema/validators/groups.py:1168
msgid "{!r} does not match any declared element of the model group"
msgstr "{!r} does not match any declared element of the model group"

#: xmlschema/validators/groups.py:1171
msgid "{0} has an unknown prefix {1!r}"
msgstr "{0} has an unknown prefix {1!r}"

#: xmlschema/validators/groups.py:1206
msgid "wrong content type {!r}"
msgstr "wrong content type {!r}"

#: xmlschema/validators/groups.py:1240
msgid "maxOccurs must be (0 | 1) for 'all' model groups"
msgstr "maxOccurs must be (0 | 1) for 'all' model groups"

#: xmlschema/validators/groups.py:1269
#, python-brace-format
msgid "an xs:{0} group cannot include a reference to an xs:{1} group"
msgstr "an xs:{0} group cannot include a reference to an xs:{1} group"

#: xmlschema/validators/groups.py:1276
msgid "Redefined group reference cannot have minOccurs/maxOccurs other than 1"
msgstr "Redefined group reference cannot have minOccurs/maxOccurs other than 1"

#: xmlschema/validators/helpers.py:50
#, python-format
msgid "wrong value %r for attribute %r"
msgstr "wrong value %r for attribute %r"

#: xmlschema/validators/helpers.py:79
msgid "value is not a valid xs:decimal"
msgstr "value is not a valid xs:decimal"

#: xmlschema/validators/helpers.py:85
msgid "value is not an xs:QName"
msgstr "value is not an xs:QName"

#: xmlschema/validators/helpers.py:91 xmlschema/validators/helpers.py:97
#: xmlschema/validators/helpers.py:103 xmlschema/validators/helpers.py:109
#: xmlschema/validators/helpers.py:115 xmlschema/validators/helpers.py:121
#: xmlschema/validators/helpers.py:127 xmlschema/validators/helpers.py:133
msgid "value must be {:s}"
msgstr "value must be {:s}"

#: xmlschema/validators/helpers.py:139
msgid "value must be negative"
msgstr "value must be negative"

#: xmlschema/validators/helpers.py:145
msgid "value must be positive"
msgstr "value must be positive"

#: xmlschema/validators/helpers.py:151
msgid "value must be non positive"
msgstr "value must be non positive"

#: xmlschema/validators/helpers.py:157
msgid "value must be non negative"
msgstr "value must be non negative"

#: xmlschema/validators/helpers.py:164
msgid "not an hexadecimal number"
msgstr "not an hexadecimal number"

#: xmlschema/validators/helpers.py:177
msgid "not a base64 encoding"
msgstr "not a base64 encoding"

#: xmlschema/validators/helpers.py:182
msgid "no value is allowed for xs:error type"
msgstr "no value is allowed for xs:error type"

#: xmlschema/validators/helpers.py:192
msgid "{!r} is not a boolean value"
msgstr "{!r} is not a boolean value"

#: xmlschema/validators/models.py:144
msgid ""
"Element Declarations Consistent violation between {0!r} and {1!r}: match the "
"same name but with different types"
msgstr ""
"Element Declarations Consistent violation between {0!r} and {1!r}: match the "
"same name but with different types"

#: xmlschema/validators/models.py:158
msgid "{0!r} and {1!r} overlap and are in the same {2!r} group"
msgstr "{0!r} and {1!r} overlap and are in the same {2!r} group"

#: xmlschema/validators/models.py:170
msgid "Unique Particle Attribution violation between {0!r} and {1!r}"
msgstr "Unique Particle Attribution violation between {0!r} and {1!r}"

#: xmlschema/validators/notations.py:36
msgid "a notation declaration must be global"
msgstr "a notation declaration must be global"

#: xmlschema/validators/notations.py:40
msgid "a notation must have a 'name' attribute"
msgstr "a notation must have a 'name' attribute"

#: xmlschema/validators/notations.py:43
msgid "a notation must have a 'public' or a 'system' attribute"
msgstr "a notation must have a 'public' or a 'system' attribute"

#: xmlschema/validators/particles.py:142
msgid "minOccurs value is not an integer value"
msgstr "minOccurs value is not an integer value"

#: xmlschema/validators/particles.py:146
msgid "minOccurs value must be a non negative integer"
msgstr "minOccurs value must be a non negative integer"

#: xmlschema/validators/particles.py:154
msgid "minOccurs must be lesser or equal than maxOccurs"
msgstr "minOccurs must be lesser or equal than maxOccurs"

#: xmlschema/validators/particles.py:162
msgid "maxOccurs value must be a non negative integer or 'unbounded'"
msgstr "maxOccurs value must be a non negative integer or 'unbounded'"

#: xmlschema/validators/particles.py:166
msgid "maxOccurs must be 'unbounded' or greater than minOccurs"
msgstr "maxOccurs must be 'unbounded' or greater than minOccurs"

#: xmlschema/validators/schemas.py:146
msgid "XSD_VERSION must be '1.0' or '1.1'"
msgstr "XSD_VERSION must be '1.0' or '1.1'"

#: xmlschema/validators/schemas.py:323
msgid "no XSD source provided!"
msgstr "no XSD source provided!"

#: xmlschema/validators/schemas.py:349
msgid "the attribute 'targetNamespace' cannot be an empty string"
msgstr "the attribute 'targetNamespace' cannot be an empty string"

#: xmlschema/validators/schemas.py:352
msgid ""
"targetNamespace of XSD resource {} differs from what expected (found {!r} "
"instead of {!r})"
msgstr ""

#: xmlschema/validators/schemas.py:374
#, python-brace-format
msgid "The namespace {nm.XMLNS_NAMESPACE} cannot be used as 'targetNamespace'"
msgstr ""

#: xmlschema/validators/schemas.py:443
#, python-format
msgid "'global_maps' argument must be an %r instance"
msgstr "'global_maps' argument must be an %r instance"

#: xmlschema/validators/schemas.py:510
msgid "can't change the global maps instance of a class meta-schema"
msgstr "can't change the global maps instance of a class meta-schema"

#: xmlschema/validators/schemas.py:514
#, fuzzy
msgid ""
"can't change the global maps instance of a schema that is the main validator "
"of another global maps instance"
msgstr ""
"can't change the global maps instance of a schema that is the main validator "
"of another global maps instance"

#: xmlschema/validators/schemas.py:528
msgid "can't set the meta_schema instance of a schema"
msgstr "can't set the meta_schema instance of a schema"

#: xmlschema/validators/schemas.py:536 xmlschema/validators/schemas.py:540
msgid "can't change the {!r} attribute of a schema"
msgstr "can't change the {!r} attribute of a schema"

#: xmlschema/validators/schemas.py:738
#, python-format
msgid "meta-schema unavailable for %r"
msgstr "meta-schema unavailable for %r"

#: xmlschema/validators/schemas.py:949
msgid "the namespace {!r} is not loaded"
msgstr "the namespace {!r} is not loaded"

#: xmlschema/validators/schemas.py:1083
msgid "invalid attribute vc:minVersion value"
msgstr "invalid attribute vc:minVersion value"

#: xmlschema/validators/schemas.py:1092
msgid "invalid attribute vc:maxVersion value"
msgstr "invalid attribute vc:maxVersion value"

#: xmlschema/validators/schemas.py:1168 xmlschema/validators/schemas.py:1175
msgid "{!r} is not a valid value for xs:QName"
msgstr "{!r} is not a valid value for xs:QName"

#: xmlschema/validators/schemas.py:1184
msgid "prefix {!r} not found in namespace map"
msgstr "prefix {!r} not found in namespace map"

#: xmlschema/validators/schemas.py:1192
msgid ""
"the QName {!r} is mapped to no namespace, but this requires that there is an "
"xs:import statement in the schema without the 'namespace' attribute."
msgstr ""
"the QName {!r} is mapped to no namespace, but this requires that there is an "
"xs:import statement in the schema without the 'namespace' attribute."

#: xmlschema/validators/schemas.py:1201
msgid ""
"the QName {!r} is mapped to the namespace {!r}, but this namespace has not "
"an xs:import statement in the schema."
msgstr ""
"the QName {!r} is mapped to the namespace {!r}, but this namespace has not "
"an xs:import statement in the schema."

#: xmlschema/validators/schemas.py:1365 xmlschema/validators/schemas.py:1422
#: xmlschema/validators/schemas.py:1601
msgid "{!r} is not an element of the schema"
msgstr "{!r} is not an element of the schema"

#: xmlschema/validators/schemas.py:1379
msgid "the provided path selects nothing to validate"
msgstr ""

#: xmlschema/validators/schemas.py:1395
#, python-format
msgid "IDREF %r not found in XML document"
msgstr "IDREF %r not found in XML document"

#: xmlschema/validators/schemas.py:1703
msgid "encoding needs at least one XSD element declaration"
msgstr "encoding needs at least one XSD element declaration"

#: xmlschema/validators/schemas.py:1745
#, python-format
msgid "the path %r doesn't match any element of the schema!"
msgstr "the path %r doesn't match any element of the schema!"

#: xmlschema/validators/schemas.py:1747
msgid ""
"unable to select an element for encoding data, provide a valid 'path' "
"argument."
msgstr ""
"unable to select an element for encoding data, provide a valid 'path' "
"argument."

#: xmlschema/validators/simple_types.py:120
#, python-format
msgid "wrong value %r for facet xs:whiteSpace"
msgstr "wrong value %r for facet xs:whiteSpace"

#: xmlschema/validators/simple_types.py:162
msgid "facets not allowed for a direct derivation of xs:anySimpleType"
msgstr "facets not allowed for a direct derivation of xs:anySimpleType"

#: xmlschema/validators/simple_types.py:166
msgid "facets not allowed for a direct content derivation of xs:anySimpleType"
msgstr "facets not allowed for a direct content derivation of xs:anySimpleType"

#: xmlschema/validators/simple_types.py:172
msgid "one or more facets are not applicable, admitted set is {!r}"
msgstr "one or more facets are not applicable, admitted set is {!r}"

#: xmlschema/validators/simple_types.py:178
#, python-format
msgid "facet group must have the same base type: %r"
msgstr "facet group must have the same base type: %r"

#: xmlschema/validators/simple_types.py:188
msgid "'length' value must be non a negative integer"
msgstr "'length' value must be non a negative integer"

#: xmlschema/validators/simple_types.py:192
msgid "'minLength' value must be less than or equal to 'length'"
msgstr "'minLength' value must be less than or equal to 'length'"

#: xmlschema/validators/simple_types.py:199
msgid "cannot specify both 'length' and 'minLength'"
msgstr "cannot specify both 'length' and 'minLength'"

#: xmlschema/validators/simple_types.py:204
msgid "'maxLength' value must be greater or equal to 'length'"
msgstr "'maxLength' value must be greater or equal to 'length'"

#: xmlschema/validators/simple_types.py:212
msgid "cannot specify both 'length' and 'maxLength'"
msgstr "cannot specify both 'length' and 'maxLength'"

#: xmlschema/validators/simple_types.py:221
msgid "'minLength' value must be a non negative integer"
msgstr "'minLength' value must be a non negative integer"

#: xmlschema/validators/simple_types.py:224
msgid "'maxLength' value is less than 'minLength'"
msgstr "'maxLength' value is less than 'minLength'"

#: xmlschema/validators/simple_types.py:227
msgid "'minLength' has a lesser value than parent"
msgstr "'minLength' has a lesser value than parent"

#: xmlschema/validators/simple_types.py:230
msgid "'minLength' has a greater value than parent 'maxLength'"
msgstr "'minLength' has a greater value than parent 'maxLength'"

#: xmlschema/validators/simple_types.py:235
msgid "'maxLength' value must be a non negative integer"
msgstr "'maxLength' value must be a non negative integer"

#: xmlschema/validators/simple_types.py:238
msgid "'maxLength' has a lesser value than parent 'minLength'"
msgstr "'maxLength' has a lesser value than parent 'minLength'"

#: xmlschema/validators/simple_types.py:241
msgid "'maxLength' has a greater value than parent"
msgstr "'maxLength' has a greater value than parent"

#: xmlschema/validators/simple_types.py:252
msgid "cannot specify both 'minInclusive' and 'minExclusive'"
msgstr "cannot specify both 'minInclusive' and 'minExclusive'"

#: xmlschema/validators/simple_types.py:255
msgid "'minInclusive' must be less or equal to 'maxInclusive'"
msgstr "'minInclusive' must be less or equal to 'maxInclusive'"

#: xmlschema/validators/simple_types.py:258
msgid "'minInclusive' must be lesser than 'maxExclusive'"
msgstr "'minInclusive' must be lesser than 'maxExclusive'"

#: xmlschema/validators/simple_types.py:263
msgid "'minExclusive' must be lesser than 'maxInclusive'"
msgstr "'minExclusive' must be lesser than 'maxInclusive'"

#: xmlschema/validators/simple_types.py:266
msgid "'minExclusive' must be less or equal to 'maxExclusive'"
msgstr "'minExclusive' must be less or equal to 'maxExclusive'"

#: xmlschema/validators/simple_types.py:270
msgid "cannot specify both 'maxInclusive' and 'maxExclusive'"
msgstr "cannot specify both 'maxInclusive' and 'maxExclusive'"

#: xmlschema/validators/simple_types.py:276
msgid ""
"fractionDigits facet value cannot be lesser than the value of totalDigits "
"facet"
msgstr ""
"fractionDigits facet value cannot be lesser than the value of totalDigits "
"facet"

#: xmlschema/validators/simple_types.py:282
msgid ""
"totalDigits facet value cannot be greater than the value of the same facet "
"in the base type"
msgstr ""
"totalDigits facet value cannot be greater than the value of the same facet "
"in the base type"

#: xmlschema/validators/simple_types.py:291
#, python-format
msgid ""
"the explicitTimezone facet value cannot be changed if the base type has the "
"same facet with value %r"
msgstr ""
"the explicitTimezone facet value cannot be changed if the base type has the "
"same facet with value %r"

#: xmlschema/validators/simple_types.py:691
msgid "value is not an instance of {!r}"
msgstr "value is not an instance of {!r}"

#: xmlschema/validators/simple_types.py:713
#: xmlschema/validators/simple_types.py:805
#: xmlschema/validators/simple_types.py:1167
msgid "invalid value {!r}"
msgstr "invalid value {!r}"

#: xmlschema/validators/simple_types.py:740
#, python-format
msgid "unmapped prefix %r in a QName"
msgstr "unmapped prefix %r in a QName"

#: xmlschema/validators/simple_types.py:753
#: xmlschema/validators/simple_types.py:764
msgid "duplicated xs:ID value {!r}"
msgstr "duplicated xs:ID value {!r}"

#: xmlschema/validators/simple_types.py:759
msgid "no more than one attribute of type ID should be present in an element"
msgstr "no more than one attribute of type ID should be present in an element"

#: xmlschema/validators/simple_types.py:783
msgid "boolean value {0!r} requires a {1!r} decoder"
msgstr "boolean value {0!r} requires a {1!r} decoder"

#: xmlschema/validators/simple_types.py:789
msgid "{0!r} is not an instance of {1!r}"
msgstr "{0!r} is not an instance of {1!r}"

#: xmlschema/validators/simple_types.py:892
msgid "ambiguous list type declaration"
msgstr "ambiguous list type declaration"

#: xmlschema/validators/simple_types.py:900
msgid "missing list type declaration"
msgstr "missing list type declaration"

#: xmlschema/validators/simple_types.py:916
#, python-format
msgid "'final' value of the itemType %r forbids derivation by list"
msgstr "'final' value of the itemType %r forbids derivation by list"

#: xmlschema/validators/simple_types.py:920
#: xmlschema/validators/simple_types.py:1093
#: xmlschema/validators/simple_types.py:1376
msgid "cannot use xs:anyAtomicType as base type of a user-defined type"
msgstr "cannot use xs:anyAtomicType as base type of a user-defined type"

#: xmlschema/validators/simple_types.py:926
#, python-format
msgid "%r: a list must be based on atomic data types"
msgstr "%r: a list must be based on atomic data types"

#: xmlschema/validators/simple_types.py:973
msgid "unexpected nested list item {!r}"
msgstr ""

#: xmlschema/validators/simple_types.py:1080
msgid "a {0!r} required, not {1!r}"
msgstr "a {0!r} required, not {1!r}"

#: xmlschema/validators/simple_types.py:1084
#, python-format
msgid "'final' value of the memberTypes %r forbids derivation by union"
msgstr "'final' value of the memberTypes %r forbids derivation by union"

#: xmlschema/validators/simple_types.py:1090
msgid "missing xs:union type declarations"
msgstr "missing xs:union type declarations"

#: xmlschema/validators/simple_types.py:1205
msgid "no type suitable for encoding the object"
msgstr "no type suitable for encoding the object"

#: xmlschema/validators/simple_types.py:1249
msgid "'name' attribute in a local simpleType definition"
msgstr "'name' attribute in a local simpleType definition"

#: xmlschema/validators/simple_types.py:1289
#, python-format
msgid "wrong base type %r, an atomic type required"
msgstr "wrong base type %r, an atomic type required"

#: xmlschema/validators/simple_types.py:1295
msgid "an xs:simpleType definition expected"
msgstr "an xs:simpleType definition expected"

#: xmlschema/validators/simple_types.py:1300
msgid ""
"when a complexType with simpleContent restricts a complexType with mixed and "
"with emptiable content then a simpleType child declaration is required"
msgstr ""
"when a complexType with simpleContent restricts a complexType with mixed and "
"with emptiable content then a simpleType child declaration is required"

#: xmlschema/validators/simple_types.py:1305
#, python-format
msgid "simpleType restriction of %r is not allowed"
msgstr "simpleType restriction of %r is not allowed"

#: xmlschema/validators/simple_types.py:1314
msgid "unexpected tag after attribute declarations"
msgstr "unexpected tag after attribute declarations"

#: xmlschema/validators/simple_types.py:1319
msgid "duplicated simpleType declaration"
msgstr "duplicated simpleType declaration"

#: xmlschema/validators/simple_types.py:1345
msgid "restriction with 'base' attribute and simpleType declaration"
msgstr "restriction with 'base' attribute and simpleType declaration"

#: xmlschema/validators/simple_types.py:1353
#, python-format
msgid "unexpected tag %r in restriction"
msgstr "unexpected tag %r in restriction"

#: xmlschema/validators/simple_types.py:1359
#, python-format
msgid "multiple %r constraint facet"
msgstr "multiple %r constraint facet"

#: xmlschema/validators/simple_types.py:1371
msgid "missing base type in restriction"
msgstr "missing base type in restriction"

#: xmlschema/validators/simple_types.py:1373
#, python-format
msgid "'final' value of the baseType %r forbids derivation by restriction"
msgstr "'final' value of the baseType %r forbids derivation by restriction"

#: xmlschema/validators/simple_types.py:1430
#: xmlschema/validators/simple_types.py:1453
#, python-format
msgid ""
"wrong base type %r: a simpleType or a complexType with simple or mixed "
"content required"
msgstr ""
"wrong base type %r: a simpleType or a complexType with simple or mixed "
"content required"

#: xmlschema/validators/validation.py:55
msgid "validation mode must be a string"
msgstr ""

#: xmlschema/validators/validation.py:57
#, python-format
msgid "validation mode can be 'strict', 'lax' or 'skip': %r"
msgstr "validation mode can be 'strict', 'lax' or 'skip': %r"

#: xmlschema/validators/validation.py:179
msgid "attribute {0}={1!r}: {2}"
msgstr "attribute {0}={1!r}: {2}"

#: xmlschema/validators/wildcards.py:92
#, python-format
msgid "wrong value %r in 'namespace' attribute"
msgstr "wrong value %r in 'namespace' attribute"

#: xmlschema/validators/wildcards.py:99
#, python-format
msgid "wrong value %r for 'processContents' attribute"
msgstr "wrong value %r for 'processContents' attribute"

#: xmlschema/validators/wildcards.py:107
msgid "'namespace' and 'notNamespace' attributes are mutually exclusive"
msgstr "'namespace' and 'notNamespace' attributes are mutually exclusive"

#: xmlschema/validators/wildcards.py:118
#, python-format
msgid "wrong value %r in 'notNamespace' attribute"
msgstr "wrong value %r in 'notNamespace' attribute"

#: xmlschema/validators/wildcards.py:134
msgid "wrong value for 'notQName' attribute"
msgstr "wrong value for 'notQName' attribute"

#: xmlschema/validators/wildcards.py:141
#, python-format
msgid "unmapped QName in 'notQName' attribute: %s"
msgstr "unmapped QName in 'notQName' attribute: %s"

#: xmlschema/validators/wildcards.py:145
#, python-format
msgid "wrong QName format in 'notQName' attribute: %s"
msgstr "wrong QName format in 'notQName' attribute: %s"

#: xmlschema/validators/wildcards.py:153
msgid "the namespace of each QName in notQName is allowed by notNamespace"
msgstr "the namespace of each QName in notQName is allowed by notNamespace"

#: xmlschema/validators/wildcards.py:157
msgid "names in notQName must be in namespaces that are allowed"
msgstr "names in notQName must be in namespaces that are allowed"

#: xmlschema/validators/wildcards.py:334
msgid "not expressible wildcard namespace union: {0!r} V {1!r}:"
msgstr "not expressible wildcard namespace union: {0!r} V {1!r}:"

#: xmlschema/validators/wildcards.py:502 xmlschema/validators/wildcards.py:545
msgid "element {!r} is not allowed here"
msgstr "element {!r} is not allowed here"

#: xmlschema/validators/wildcards.py:510 xmlschema/validators/wildcards.py:552
#: xmlschema/validators/wildcards.py:691 xmlschema/validators/wildcards.py:720
msgid "unavailable namespace {!r}"
msgstr "unavailable namespace {!r}"

#: xmlschema/validators/wildcards.py:673 xmlschema/validators/wildcards.py:703
#, python-format
msgid "attribute %r not allowed"
msgstr "attribute %r not allowed"

#: xmlschema/validators/wildcards.py:685 xmlschema/validators/wildcards.py:714
#, python-format
msgid "attribute %r not found"
msgstr "attribute %r not found"

#: xmlschema/validators/wildcards.py:875
#, python-format
msgid "wrong value %r for 'mode' attribute"
msgstr "wrong value %r for 'mode' attribute"

#: xmlschema/validators/wildcards.py:881
msgid ""
"an openContent with mode='none' cannot have an <xs:any> child declaration"
msgstr ""
"an openContent with mode='none' cannot have an <xs:any> child declaration"

#: xmlschema/validators/wildcards.py:885
msgid "an <xs:any> child declaration is required"
msgstr "an <xs:any> child declaration is required"

#: xmlschema/validators/wildcards.py:919
msgid "defaultOpenContent must be a child of the schema"
msgstr "defaultOpenContent must be a child of the schema"

#: xmlschema/validators/wildcards.py:922
msgid "the attribute 'mode' of a defaultOpenContent cannot be 'none'"
msgstr "the attribute 'mode' of a defaultOpenContent cannot be 'none'"

#: xmlschema/validators/wildcards.py:925
msgid "a defaultOpenContent declaration cannot be empty"
msgstr "a defaultOpenContent declaration cannot be empty"

#: xmlschema/validators/xsdbase.py:125
#, python-format
msgid "%r is not built"
msgstr "%r is not built"

#: xmlschema/validators/xsdbase.py:130
#, python-format
msgid "validation mode is 'strict' and %r is not built"
msgstr "validation mode is 'strict' and %r is not built"

#: xmlschema/validators/xsdbase.py:133
#, python-format
msgid "validation mode is 'strict' and %r is not valid"
msgstr "validation mode is 'strict' and %r is not valid"

#: xmlschema/validators/xsdbase.py:249
msgid ""
"wrong value {0!r} for 'xpathDefaultNamespace' attribute, can be (anyURI | "
"{1})."
msgstr ""
"wrong value {0!r} for 'xpathDefaultNamespace' attribute, can be (anyURI | "
"{1})."

#: xmlschema/validators/xsdbase.py:436
#, python-format
msgid "missing attribute 'name' in a global %r"
msgstr "missing attribute 'name' in a global %r"

#: xmlschema/validators/xsdbase.py:439
#, python-format
msgid "missing both attributes 'name' and 'ref' in local %r"
msgstr "missing both attributes 'name' and 'ref' in local %r"

#: xmlschema/validators/xsdbase.py:442
msgid "attributes 'name' and 'ref' are mutually exclusive"
msgstr "attributes 'name' and 'ref' are mutually exclusive"

#: xmlschema/validators/xsdbase.py:445
#, python-format
msgid "attribute 'ref' not allowed in a global %r"
msgstr "attribute 'ref' not allowed in a global %r"

#: xmlschema/validators/xsdbase.py:454
msgid "a reference component cannot have child definitions/declarations"
msgstr "a reference component cannot have child definitions/declarations"

#: xmlschema/validators/xsdbase.py:469
msgid "too many XSD components, unexpected {0!r} found at position {1}"
msgstr "too many XSD components, unexpected {0!r} found at position {1}"

#: xmlschema/validators/xsdbase.py:486
#, python-brace-format
msgid "The namespace {XMLNS_NAMESPACE} cannot be used as 'targetNamespace'"
msgstr ""

#: xmlschema/validators/xsdbase.py:490
msgid ""
"attribute 'name' must be present when 'targetNamespace' attribute is provided"
msgstr ""
"attribute 'name' must be present when 'targetNamespace' attribute is provided"

#: xmlschema/validators/xsdbase.py:494
msgid ""
"attribute 'form' must be absent when 'targetNamespace' attribute is provided"
msgstr ""
"attribute 'form' must be absent when 'targetNamespace' attribute is provided"

#: xmlschema/validators/xsdbase.py:499
#, python-format
msgid "a global %s must have the same namespace as its parent schema"
msgstr "a global %s must have the same namespace as its parent schema"

#: xmlschema/validators/xsdbase.py:507
msgid ""
"a declaration contained in a global complexType must have the same namespace "
"as its parent schema"
msgstr ""
"a declaration contained in a global complexType must have the same namespace "
"as its parent schema"

#: xmlschema/validators/xsdbase.py:632
msgid "parent circularity from {}"
msgstr "parent circularity from {}"

#: xmlschema/validators/identities.py:89
msgid "'xpath' attribute required"
msgstr "'xpath' attribute required"

#: xmlschema/validators/identities.py:104
msgid "invalid XPath expression for an {}"
msgstr "invalid XPath expression for an {}"

#: xmlschema/validators/identities.py:173
msgid "missing required attribute 'name'"
msgstr "missing required attribute 'name'"

#: xmlschema/validators/identities.py:181
msgid "missing 'selector' declaration"
msgstr "missing 'selector' declaration"

#: xmlschema/validators/identities.py:198
msgid "unknown identity constraint {!r}"
msgstr "unknown identity constraint {!r}"

#: xmlschema/validators/identities.py:203
msgid "attribute 'ref' points to a different kind constraint"
msgstr "attribute 'ref' points to a different kind constraint"

#: xmlschema/validators/identities.py:231
msgid "selector xpath expression can only select elements"
msgstr "selector xpath expression can only select elements"

#: xmlschema/validators/identities.py:286
msgid "missing required attribute 'refer'"
msgstr "missing required attribute 'refer'"

#: xmlschema/validators/identities.py:316
#, python-format
msgid "key/unique identity constraint %r is missing"
msgstr "key/unique identity constraint %r is missing"

#: xmlschema/validators/identities.py:321
#, python-format
msgid "reference to a non key/unique identity constraint %r"
msgstr "reference to a non key/unique identity constraint %r"

#: xmlschema/validators/identities.py:324
msgid "field cardinality mismatch between {0!r} and {1!r}"
msgstr "field cardinality mismatch between {0!r} and {1!r}"

#: xmlschema/validators/identities.py:401
msgid "duplicated value {0!r} for {1!r}"
msgstr "duplicated value {0!r} for {1!r}"

#: xmlschema/validators/identities.py:495
#, python-format
msgid "%r field selects multiple values!"
msgstr "%r field selects multiple values!"

#: xmlschema/validators/identities.py:501
#, python-format
msgid "%r field selects a %r!"
msgstr "%r field selects a %r!"

#: xmlschema/validators/identities.py:510
#, python-format
msgid "%r field doesn't have a simple type!"
msgstr "%r field doesn't have a simple type!"

#: xmlschema/validators/identities.py:542
msgid "missing key field {0!r} for {1!r}"
msgstr "missing key field {0!r} for {1!r}"

#: xmlschema/converters/__init__.py:37
msgid "'converter' argument must be a {0!r} subclass or instance: {1!r}"
msgstr "'converter' argument must be a {0!r} subclass or instance: {1!r}"

#~ msgid "circular definition found between {0!r} and {1!r}"
#~ msgstr "circular definition found between {0!r} and {1!r}"

#, python-format
#~ msgid "missing dynamic loaded schema from %s"
#~ msgstr "missing dynamic loaded schema from %s"

#~ msgid "dynamic loaded schema change the assessment"
#~ msgstr "dynamic loaded schema change the assessment"

#~ msgid "wrong element {0!r} for map {1!r}"
#~ msgstr "wrong element {0!r} for map {1!r}"

#~ msgid "missing XSD namespace in meta-schema instance {!r}"
#~ msgstr "missing XSD namespace in meta-schema instance {!r}"

#~ msgid "missing default meta-schema instance {!r}"
#~ msgstr "missing default meta-schema instance {!r}"

#~ msgid "global element not built!"
#~ msgstr "global element not built!"

#, python-format
#~ msgid "global map has unbuilt components: %r"
#~ msgstr "global map has unbuilt components: %r"

#~ msgid "Circular reference found between attribute groups {0!r} and {1!r}"
#~ msgstr "Circular reference found between attribute groups {0!r} and {1!r}"

#~ msgid "wrong namespace ({0!r} instead of {1!r}) for XSD resource {2}"
#~ msgstr "wrong namespace ({0!r} instead of {1!r}) for XSD resource {2}"

#~ msgid "missing XSD namespace in meta-schema"
#~ msgstr "missing XSD namespace in meta-schema"

#~ msgid "Missing meta-schema source URL"
#~ msgstr "Missing meta-schema source URL"

#~ msgid ""
#~ "The argument 'base_schemas' must be a dictionary or a sequence of couples"
#~ msgstr ""
#~ "The argument 'base_schemas' must be a dictionary or a sequence of couples"

#~ msgid "a {0!r} or {1!r} object required"
#~ msgstr "a {0!r} or {1!r} object required"

#~ msgid "circular definition found for type {!r}"
#~ msgstr "circular definition found for type {!r}"

#~ msgid "circular definition found on xs:union type {!r}"
#~ msgstr "circular definition found on xs:union type {!r}"

#, python-format
#~ msgid "no type suitable for decoding the values %r"
#~ msgstr "no type suitable for decoding the values %r"
